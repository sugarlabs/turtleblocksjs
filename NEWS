1 New project: a Javascript version of Turtle Blocks
  * basic block manipluation
  * basic block execution
  * expandable blocks working
  * cascading of expandable blocks
  * added arithmetic functions (arg parsing)
  * rotate turtle using easeljs rotation
  * implement actions (stacks)
  * implement boxes
  * added booleans
  * added slowmo playback
  * only one stack
  * added protoblocks for new boxes
  * added protoblock for new stacks
  * added time block
  * added mouse x, mouse y blocks
  * added controls for rabbit vs turtle
  * added controls for show/hide
  * added eraser button
  * added coordinate grids
  * fixed palette updates from block palette
  * added penup/down
  * added fill
  * load blocks
  * added click on block to run
  * added arc
  * added setxy
  * added set heading
  * added x, y, heading
  * added lots-o-sample projects
  * expanding arithmetic blocks
  * expanding 2-arg blocks
  * implemented color model (Munsell)
  * fixed Munsell 2.5 tables
  * added set background color
  * added trash
  * moved labels to container
  * set expandable blocks on load
  * fixed repeat docking bug
  * fixed filler hide bug
  * added real block highlighting
  * fixed problem with cascading arithmetic operators
  * trigger events on containers, not bitmaps
  * added multiple turtles (one for each start block)
  * added show text
  * added show image
  * different colors for each turtle
  * added turtle shell (aka sprites)
  * erase media (remove children)
  * reset turtle skin on clear
  * added scale text, images, turtle shell
  * center images on turtle
  * fixed turtle layering bug
  * fixed action name bug
  * open file from window location
  * major refactoring of code
  * prevent CR in numeric text area
  * added restore from trash
  * added wait block
  * added save/restore session
  * added stop turtle
  * first pass on a palette strategy
  * added save file to turtle.sugarlabs.org (when running from server) w/tch
  * added svg output to window
  * added menu to trash for restore and clear all
  * fixed block/turtle/canvas layering
  * fixed mouse down logic
  * figured out how to do inline svg with easeljs...
    beginning to convert to svg factory methods.
  * using container caching on blocks
  * fixed labels on random block
  * fixed label on less block (use &lt;)
  * fixed infinite loop problem when searching for expandables
  * fixed more issues with caching
  * reload media thumbnails on load
  * added collapsible stacks
  * added copy/paste of stacks
  * rename action blocks when loading projects
  * added palette entries when encountering new storein blocks
  * allow dragging from collapse button
  * added forever block
  * added 'stop action' (AKA break)
  * fixed several format issues with saved SVG
  * saving SVG thumbnail to server along with project file
  * seeding SVG with bg color on run
  * failed experimenting with zoom and scroll settings
  * fixed rounding bug in repeat code
  * fixed menu tearing issues
  * fixed placement of new items in Blocks menu
  * improved highlight logic
  * fixed labels on collapsed stacks
  * better compartmentalization of block code
   (using a dictionary for the code associated with each "advanced" block)
  * fixed scaling issues with SVG output
  * implemented selectable menu of samples (for server version)
  * check to see if running from a server or a local copy
  * implemented selectable menu of samples (for local filesystem version)
  * added paging to samples viewer
  * fixed crash due to uncaching something that hasn't been cached
    (2arg adjustable blocks)
  * hide stop button when running from server
  * major overhaul of SVG generation: async
    (Works with Firefox, Safari, Chrome)
  * added paging to samples downloads
  * added Easeljs caching throughout
  * added URL block
  * repositioned palettes when toolbar is unavailable so as not to overlap
    with on-canvas buttons
  * using png for thumbnails
  * added project name input when not using Sugar toolbars
  * added print block
  * consolidated various show blocks into one block
  * added 'any' docking parameter
  * fixed bug with new start block after clear all
  * show parameter values on blocks when running in debig mode
  * show and hide blocks
  * added keyboard short cuts
  * added keyboard sensor
  * fixed issue with break block scope
  * label box values during debug mode
  * fixed some race conditions
  * fill broken in save to SVG
  * fix race condition in palettes load
  * hover to invoke copy stack
  * while block (GCI - drakosvlad)
  * not block (GCI - Daksh Shah)
  * and block (GCI - Ignacio Rodriguez)

TODO:
  * enable docking to any for boxes, equal
  * enable number names for actions and boxes
  * query turtle blocks
  * use busy cursor where approporate
  * use snap to pixels
  * user defined blocks
  * more sensors
  * implement if-then-else, while, until
  * implement and or not
  * i18n
  * RTL support
  * scroll instead of zoom?
  * use graphical error messages

BUGS:
  * copy stack copies instances instead of making new blocks?
  * do action menu has wrong value?
  * don't save full-sized bitmap to session
  * fix canvas sizing, resizing
  * cannot open same file twice in a row (no change event?)
  * occasional bad init ???

