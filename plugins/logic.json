{
    "HIGHLIGHTSTROKECOLORS": {
        "logic": "#000000"
    }, 
    "ARGPLUGINS": {
        "mynot": "var block = logo.blocks.blockList[blk];var conns = block.connections;block.value = ~ logo.parseArg(logo, turtle, conns[1]);", 
        "myor": "var block = logo.blocks.blockList[blk];var conns = block.connections;block.value = logo.parseArg(logo, turtle, conns[1]) | logo.parseArg(logo, turtle, conns[2]);", 
        "myxor": "var block = logo.blocks.blockList[blk];var conns = block.connections;block.value = logo.parseArg(logo, turtle, conns[1]) >> logo.parseArg(logo, turtle, conns[2]);", 
        "mysr": "var block = logo.blocks.blockList[blk];var conns = block.connections;block.value = logo.parseArg(logo, turtle, conns[1]) >> logo.parseArg(logo, turtle, conns[2]);", 
        "mysl": "var block = logo.blocks.blockList[blk];var conns = block.connections;block.value = logo.parseArg(logo, turtle, conns[1]) << logo.parseArg(logo, turtle, conns[2]);", 
        "myand": "var block = logo.blocks.blockList[blk];var conns = block.connections;block.value = logo.parseArg(logo, turtle, conns[1]) & logo.parseArg(logo, turtle, conns[2]);"
    }, 
    "PALETTEHIGHLIGHTCOLORS": {
        "logic": "#FF9FFF"
    }, 
    "PALETTEPLUGINS": {
        "logic": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"55\" height=\"55\" viewBox=\"0 0 55 55\"><g transform=\"matrix(1.25 0 0 1.25-7.5-6.25)\"><g font-family=\"Sans\" word-spacing=\"0\" line-height=\"125%\" letter-spacing=\"0\" font-size=\"11\"><text x=\"33.891\" y=\"39.844\"><tspan x=\"33.891\" y=\"39.844\" fill=\"#fff\">0</tspan></text><g fill=\"#000\"><text x=\"33.792\" y=\"27\"><tspan x=\"33.792\" y=\"27\" fill=\"#fff\">1</tspan></text><text x=\"19.18\" y=\"40\"><tspan x=\"19.18\" y=\"40\" fill=\"#fff\">1</tspan></text><text x=\"19.275\" y=\"26.844\"><tspan x=\"19.275\" y=\"26.844\" fill=\"#fff\">0</tspan></text></g></g><g fill=\"#fff\" stroke=\"#fff\"><path d=\"m10.5 14.5h35\"/><path d=\"m15.5 44.5v-35\"/></g></g></svg>"
    }, 
    "BLOCKPLUGINS": {
        "mynot": "var LogicTwoArgBlock = function (name, label) {    var block = new ProtoBlock(name);    block.palette = palettes.dict['logic'];    blocks.protoBlockDict[name] = block;    block.staticLabels.push(label);    block.adjustWidthToLabel();    block.twoArgMathBlock();    block.defaults.push(1);    block.defaults.push(1);};var LogicArgBlock = function (name, label) {    var block = new ProtoBlock(name);    block.palette = palettes.dict['logic'];    blocks.protoBlockDict[name] = block;    block.staticLabels.push(label);    block.adjustWidthToLabel();    block.oneArgMathBlock();    block.defaults.push(0);};LogicArgBlock('mynot', 'NOT');", 
        "myor": "var LogicTwoArgBlock = function (name, label) {    var block = new ProtoBlock(name);    block.palette = palettes.dict['logic'];    blocks.protoBlockDict[name] = block;    block.staticLabels.push(label);    block.adjustWidthToLabel();    block.twoArgMathBlock();    block.defaults.push(1);    block.defaults.push(1);};var LogicArgBlock = function (name, label) {    var block = new ProtoBlock(name);    block.palette = palettes.dict['logic'];    blocks.protoBlockDict[name] = block;    block.staticLabels.push(label);    block.adjustWidthToLabel();    block.oneArgMathBlock();    block.defaults.push(0);};LogicTwoArgBlock('myor', 'OR');", 
        "myxor": "var LogicTwoArgBlock = function (name, label) {    var block = new ProtoBlock(name);    block.palette = palettes.dict['logic'];    blocks.protoBlockDict[name] = block;    block.staticLabels.push(label);    block.adjustWidthToLabel();    block.twoArgMathBlock();    block.defaults.push(1);    block.defaults.push(1);};var LogicArgBlock = function (name, label) {    var block = new ProtoBlock(name);    block.palette = palettes.dict['logic'];    blocks.protoBlockDict[name] = block;    block.staticLabels.push(label);    block.adjustWidthToLabel();    block.oneArgMathBlock();    block.defaults.push(0);};LogicTwoArgBlock('myxor', 'XOR');", 
        "mysr": "var LogicTwoArgBlock = function (name, label) {    var block = new ProtoBlock(name);    block.palette = palettes.dict['logic'];    blocks.protoBlockDict[name] = block;    block.staticLabels.push(label);    block.adjustWidthToLabel();    block.twoArgMathBlock();    block.defaults.push(1);    block.defaults.push(1);};var LogicArgBlock = function (name, label) {    var block = new ProtoBlock(name);    block.palette = palettes.dict['logic'];    blocks.protoBlockDict[name] = block;    block.staticLabels.push(label);    block.adjustWidthToLabel();    block.oneArgMathBlock();    block.defaults.push(0);};LogicTwoArgBlock('mysr', '&gt;&gt;');", 
        "mysl": "var LogicTwoArgBlock = function (name, label) {    var block = new ProtoBlock(name);    block.palette = palettes.dict['logic'];    blocks.protoBlockDict[name] = block;    block.staticLabels.push(label);    block.adjustWidthToLabel();    block.twoArgMathBlock();    block.defaults.push(1);    block.defaults.push(1);};var LogicArgBlock = function (name, label) {    var block = new ProtoBlock(name);    block.palette = palettes.dict['logic'];    blocks.protoBlockDict[name] = block;    block.staticLabels.push(label);    block.adjustWidthToLabel();    block.oneArgMathBlock();    block.defaults.push(0);};LogicTwoArgBlock('mysl', '&lt;&lt;');", 
        "myand": "var LogicTwoArgBlock = function (name, label) {    var block = new ProtoBlock(name);    block.palette = palettes.dict['logic'];    blocks.protoBlockDict[name] = block;    block.staticLabels.push(label);    block.adjustWidthToLabel();    block.twoArgMathBlock();    block.defaults.push(1);    block.defaults.push(1);};var LogicArgBlock = function (name, label) {    var block = new ProtoBlock(name);    block.palette = palettes.dict['logic'];    blocks.protoBlockDict[name] = block;    block.staticLabels.push(label);    block.adjustWidthToLabel();    block.oneArgMathBlock();    block.defaults.push(0);};LogicTwoArgBlock('myand', 'AND');"
    }, 
    "PALETTEFILLCOLORS": {
        "logic": "#ff00ff"
    }, 
    "PALETTESTROKECOLORS": {
        "logic": "#C700D3"
    }
}